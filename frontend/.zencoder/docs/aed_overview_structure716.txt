# Alsania Enhanced Domains (AED) - Full System Overview

## Introduction

Alsania Enhanced Domains (AED) is a modular, upgradeable, fully decentralized domain registry and identity system designed to replace Web3 identity solutions like ENS and Unstoppable Domains. Built to operate within the Alsania ecosystem and beyond, AED supports both native Alsania TLDs (e.g., `.alsania`, `.fx`, `.07`) and external domain integration (BYO Domains).

It is structured for maximum flexibility, clean modularity, and long-term upgradability using the UUPS proxy pattern, allowing modules to be swapped, upgraded, or extended without redeploying the main contract.

---

## 🔐 Features Offered by AED (MVP)

### 1. **Native Domain Registration**

- Free domains: `.aed`, `.alsa`, `.07`
- Premium domains (\$1): `.alsania`, `.fx`, `.echo`

### 2. **Subdomain Minting**

- One-time enhancement for \$2 (Alsania native domains) or \$5 (BYO Domains)
- Supports linear fee model per subdomain (free → \$0.10 → \$0.20, up to 20 max)

### 3. **Reverse Resolution**

- Each domain & subdomain has a reverse record settable by the owner

### 4. **Profile Management**

- Metadata for `profileURI` and `imageURI`
- Compatible with NFT avatars and dApps

### 5. **BYO Domains**

- \$5 enhancement lets 3rd-party domains access the AED ecosystem
- ENS, UD, Freename, Basename, etc.

### 6. **Admin Dashboard (MVP)**

- TLD & enhancement pricing control
- Role assignments
- Emergency pause/unpause

---

## 🧠 Future Enhancements (Planned)

- NFT Avatar Integration
- Messaging System (username\@alsania)
- Bridging and Cross-Chain Ownership
- Guardian Recovery (multi-guardian account recovery)
- Timelocks and Multi-Sig for critical ops
- Analytics for users and admins
- User-level dashboards for revenue and subdomain tracking

---

## 💻 Client Side Interactions (Frontend)

### Pages:

1. **Main AED Page** (`index.html`)

   - Register domain
   - Add enhancements (checkbox)
   - Free/Paid TLD dropdown
   - Subdomain fee logic & enhancement pricing UI

2. **Admin Panel** (`admin.html`)

   - Set enhancement prices
   - Assign admin roles
   - Emergency pause
   - View total revenue

3. **Profile Page** (`profile.html`)

   - View owned domains
   - Update profile/image URI
   - Set reverse record
   - Manage subdomains

4. **Enhancement Dashboard (BYO Domains)**

   - Enter domain
   - Unlock AED features
   - View enhancement history

---

## 🧱 Smart Contract Architecture (Modular Layout)

```
contracts/
│
├── AED.sol                   <- Main proxy contract (UUPS)
│
├── core/
│   ├── AEDCore.sol           <- Core ERC721 + base storage
│   ├── CoreState.sol         <- Shared storage layout
│   ├── AEDConstants.sol      <- System constants
│   └── interfaces/
│       ├── IAEDCore.sol      <- Core interface
│       └── IAEDModule.sol    <- Standard module interface
│
├── modules/
│   ├── base/
│   │   ├── ModuleBase.sol    <- Base contract for all modules
│   │   └── ModuleRegistry.sol <- Module management system
│   ├── admin/
│   │   └── AEDAdmin.sol      <- Role/fee/TLD control
│   ├── registry/
│   │   └── AEDRegistry.sol   <- Feature flags, TLD/BYO logic
│   ├── minting/
│   │   └── AEDMinting.sol    <- Domain/subdomain registration
│   ├── metadata/
│   │   └── AEDMetadata.sol   <- Profile + image management
│   ├── reverse/
│   │   └── AEDReverse.sol    <- Reverse records
│   ├── enhancements/
│   │   └── AEDEnhancements.sol <- Add-ons (optional)
│   ├── recovery/
│   │   └── AEDRecovery.sol   <- Guardian system (optional)
│   └── bridge/
│       └── AEDBridge.sol     <- Bridging logic (future)
│
├── libraries/
│   ├── ModuleLib.sol         <- Module helper functions
│   ├── ValidationLib.sol     <- Input validation
│   └── StorageLib.sol        <- Storage slot management
│
└── interfaces/
    ├── modules/
    │   ├── IAEDAdmin.sol
    │   ├── IAEDRegistry.sol
    │   ├── IAEDMinting.sol
    │   ├── IAEDMetadata.sol
    │   ├── IAEDReverse.sol
    │   ├── IAEDEnhancements.sol
    │   ├── IAEDRecovery.sol
    │   └── IAEDBridge.sol
    └── external/
        └── IERC721Extended.sol
```

---

## ⚙️ Upgradeability: UUPS Architecture

- `AED.sol` is the main UUPS proxy entrypoint.
- Each module inherits `ModuleBase` and conforms to `IAEDModule`.
- Initialization of modules is done via `initializeModule_<ModuleName>()`.
- Future modules can be added by updating the main proxy contract without losing data.

---

## 🔌 Plug-and-Play Modular Design

Each module:

- Uses namespaced storage (via `StorageLib`)
- Implements standard interface (via `IAEDModule`)
- Can be independently paused/upgraded
- Registers its own selectors in `ModuleRegistry.sol`

Benefits:

- Isolation: Bugs in one module won’t affect others
- Upgradeable: Swap modules without redeploying the whole system
- Extensible: New enhancements, analytics, etc., can be added anytime

---

## ✅ Deployment Order

1. Deploy `AEDCore.sol` (via proxy: `AED.sol`)
2. Deploy each module
3. Register modules
4. Initialize modules
5. Set initial admin + fees + TLDs via admin dashboard

---

## ✅ Verification Checklist

- ✅ Contract structure matches modular design
- ✅ Follows OpenZeppelin UUPS standards
- ✅ Upgrade-safe storage via `CoreState`
- ✅ Fully separated responsibilities
- ✅ Gas optimized for reads/writes
- ✅ Feature toggles and fee logic in place
- ✅ Role-based access control (admin, upgrader, fee manager, etc.)

---

Let’s go make this the future of Web3 identity and domain sovereignty. **Alsania is calling.**

